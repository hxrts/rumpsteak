[package]
name = "rumpsteak-choreography"
version = "0.1.1-aura"
authors = ["Zak Cutner <me@zakcutner.uk>", "Aura Team"]
edition = "2021"
rust-version = "1.75"
description = "Choreographic programming for Rumpsteak - effect-based distributed protocols"
readme = "../README.md"
repository = "https://github.com/aura-project/rumpsteak-aura"
license = "MIT OR Apache-2.0"
keywords = ["choreography", "session", "types", "effects"]
categories = ["asynchronous", "concurrency"]

[lib]
bench = false

[dependencies]
rumpsteak-aura = { path = "..", version = "0.1.1-aura" }
rumpsteak-macros = { path = "../macros", version = "0.1" }
futures = "0.3"
tokio = { version = "1.35", features = ["full"] }
async-trait = "0.1"
serde = { version = "1.0", features = ["derive"] }
tracing = "0.1"
anyhow = "1.0"
thiserror = "1.0"
proc-macro2 = "1.0"
quote = "1.0"
syn = { version = "2.0", features = ["full"] }
bincode = "1.3"
time = { version = "0.3", features = ["serde"] }
base64 = "0.21"
hex = "0.4"
uuid = { version = "1.6", features = ["v4", "serde"] }

# Optional dependencies
rand = { version = "0.8", optional = true }

[dev-dependencies]
criterion = "0.3"
proptest = "1.4"
tempfile = "3.2"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

[features]
test-utils = ["rand"]